path_to_read
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- read.csv(path_to_read) %>%
bind_rows(df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- tidyverse::bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- tidyverse::bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
write.csv(time_df, path_to_read)  # Save the data frame to a file (optional)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.Date(start_time), End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.Date(start_time), End_Time = end_time, Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = time_spent)
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(readr::read_csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(readr::read_csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read,row.names = F),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read,row.names = F),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read,col.names =  F),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read,col.names =  F),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read, row.names =  F,col.names =  F),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read)
})
}
}
track_time()
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read,col.names =  F)
})
}
}
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read, row.names =  F)
})
}
}
track_time()
track_time()
track_time()
track_time()
track_time()
track_time <- function(category = "day") {
# Load/Create timesheet
path_to_read <- MyFunctions::my_path("D",name = "project_time_count.csv")
if(category == "day"){
start_time <- Sys.time()
message("Tracking time started.")
on.exit({
end_time <- Sys.time()
time_spent <- end_time - start_time
message("Time spent on the project:", time_spent)
# Create time data frame
df <- data.frame(Start_Time = as.character(start_time), End_Time = as.character(end_time), Time_Spent = as.numeric(time_spent))
if(file.exists(path_to_read)){
time_df <- dplyr::bind_rows(read.csv(path_to_read),
df)
}else{
time_df <- data.frame(Start_Time = start_time, End_Time = end_time, Time_Spent = time_spent)
}
# Save the data frame to a file
write.csv(time_df, path_to_read, row.names =  F)
})
}
}
[1] "Perch-likes"            "Other fish & inverts"   "Sharks & rays"          "Tuna & billfishes"      "Other fishes & inverts" "Salmon, smelts, etc"
devtools::document()
devtools::document()
