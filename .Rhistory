}
if(Path_Type == "F" | Path_Type == "Figures"){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!Path_Type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(Read == TRUE){
my_path <- paste(Path,Extra_Path,Name,sep="/")
# Fix any double // in the path
my_path <- gsub("//","/",my_path)
if(stringr::str_detect(Name,".xlsx") == TRUE){
my_path <- readxl::read_excel(my_path)
}else{
my_path <- data.table::fread(my_path, header=header)
}
}else{
my_path <- paste(Path,Extra_Path,"",sep="/")
# Fix any double // in the path
my_path<- gsub("//","/",my_path)
}
# Function returns the selected path
return(my_path)
}
#' and the it will load the recently installed package
#'
#' @param path_type Type of path needed "D" for Data, "R", for Result and "G" for generic. You need those paths to be load in the global environment
#' @param project I normally call my data folder the same as the project so it automatically sets to the project name. Alternatives available.
#' @param extra_path Any sub-path to add WITHIN the folders. Note, if it is before, include it on the "Folder" parameter -e.g. project/SubFolder -
#' @param name Dataset name in case you want the option to load data
#' @param repo Normally set to jepa88 but if connection to Drobo is availbale use repo = "FALSE"
#' @param read Default read = FALSE. read = FALSE will only return a path wile read = TURE will read a dataset
#' @return Paths to save and load data within a project
#' @export
my_path <- function(path_type, project = TRUE, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE){
# Main path where I store my data
if(repo == TRUE){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}else{
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
#' and the it will load the recently installed package
#'
#' @param path_type Type of path needed "D" for Data, "R", for Result and "G" for generic. You need those paths to be load in the global environment
#' @param project I normally call my data folder the same as the project so it automatically sets to the project name. Alternatives available.
#' @param extra_path Any sub-path to add WITHIN the folders. Note, if it is before, include it on the "Folder" parameter -e.g. project/SubFolder -
#' @param name Dataset name in case you want the option to load data
#' @param repo Normally set to jepa88 but if connection to Drobo is availbale use repo = "FALSE"
#' @param read Default read = FALSE. read = FALSE will only return a path wile read = TURE will read a dataset
#' @return Paths to save and load data within a project
#' @export
my_path <- function(path_type, project = TRUE, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE){
# Main path where I store my data
if(repo == TRUE){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}else{
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
my_path <- function(path_type, project = TRUE, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE){
# Main path where I store my data
if(repo == TRUE){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}else{
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
my_path <- function(path_type, project = TRUE, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE){
# Main path where I store my data
if(repo == TRUE){
Main_Path <- "/Volumes/jepa88/Data" # jepa88 (pre-selected)
}else{
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
devtools::install_github("jepa/MyFunctions")
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
dir.exists("/Volumes/HALL2000/")
paste("/Volumes/HALL2000/Data/",Project,"/Spatial",sep="")
Project = "Test"
paste("/Volumes/HALL2000/Data/",Project,sep="")
paste("/Volumes/HALL2000/Data/",Project,"/Spatial",sep="")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Sys.info()[7]
my_path <- function(path_type, project = TRUE, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE){
# Main path where I store my data
if(Sys.info()[7] == "carmelia"){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}
if(Sys.info()[7] == "jepa88"){
Main_Path <- "Z:/JULIANO_NEYMAR"
}
if(Sys.info()[7] == "HALL1000"){
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
devtools::document()
devtools::document()
#' and the it will load the recently installed package
#'
#' @param path_type Type of path needed "D" for Data, "R", for Result and "G" for generic. You need those paths to be load in the global environment
#' @param project I normally call my data folder the same as the project so it automatically sets to the project name. Alternatives available.
#' @param extra_path Any sub-path to add WITHIN the folders. Note, if it is before, include it on the "Folder" parameter -e.g. project/SubFolder -
#' @param name Dataset name in case you want the option to load data
#' @param repo Normally set to jepa88 but if connection to Drobo is availbale use repo = "FALSE"
#' @param read Default read = FALSE. read = FALSE will only return a path wile read = TURE will read a dataset
#' @return Paths to save and load data within a project
#' @export
my_path <- function(path_type, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE, project = TRUE){
# Main path where I store my data
if(Sys.info()[7] == "carmelia"){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}
if(Sys.info()[7] == "jepa88"){
Main_Path <- "Z:/JULIANO_NEYMAR"
}
if(Sys.info()[7] == "HALL1000"){
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
#' and the it will load the recently installed package
#'
#' @param path_type Type of path needed "D" for Data, "R", for Result and "G" for generic. You need those paths to be load in the global environment
#' @param project I normally call my data folder the same as the project so it automatically sets to the project name. Alternatives available.
#' @param extra_path Any sub-path to add WITHIN the folders. Note, if it is before, include it on the "Folder" parameter -e.g. project/SubFolder -
#' @param name Dataset name in case you want the option to load data
#' @param repo Normally set to jepa88 but if connection to Drobo is availbale use repo = "FALSE"
#' @param read Default read = FALSE. read = FALSE will only return a path wile read = TURE will read a dataset
#' @return Paths to save and load data within a project
#' @export
my_path <- function(path_type, extra_path="", name ="", repo = TRUE, read=FALSE, header=TRUE, project = TRUE){
# Main path where I store my data
if(Sys.info()[7] == "carmelia"){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}
if(Sys.info()[7] == "jepa88"){
Main_Path <- "Z:/JULIANO_NEYMAR"
}
if(Sys.info()[7] == "HALL1000"){
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
#' and the it will load the recently installed package
#'
#' @param path_type Type of path needed "D" for Data, "R", for Result and "G" for generic. You need those paths to be load in the global environment
#' @param project I normally call my data folder the same as the project so it automatically sets to the project name. Alternatives available.
#' @param extra_path Any sub-path to add WITHIN the folders. Note, if it is before, include it on the "Folder" parameter -e.g. project/SubFolder -
#' @param name Dataset name in case you want the option to load data
#' @param repo Normally set to jepa88 but if connection to Drobo is availbale use repo = "FALSE"
#' @param read Default read = FALSE. read = FALSE will only return a path wile read = TURE will read a dataset
#' @return Paths to save and load data within a project
#' @export
my_path <- function(path_type, extra_path= "", name = "", repo = TRUE, read=FALSE, header=TRUE, project = TRUE){
# Main path where I store my data
if(Sys.info()[7] == "carmelia"){
Main_Path <- "/Volumes/HALL2000/Data" # jepa88 (pre-selected)
}
if(Sys.info()[7] == "jepa88"){
Main_Path <- "Z:/JULIANO_NEYMAR"
}
if(Sys.info()[7] == "HALL1000"){
Main_Path <- "Volumes/DATA/JULIANO_NEYMAR" #If Drobo is needed
}
# Automatically sets the project name
if(project == TRUE){
Project <- basename(getwd())
}
# Set project Data, Generic Data, Results and Figures paths
if(path_type %in% c("R","r","Result","result")){
Path <- paste(Main_Path,Project,"Results",sep="/")
}
if(path_type %in% c("D","Data","d","data")){
Path <- paste(Main_Path,Project,"Data",sep="/")
}
if(path_type%in% c("G","Generic","g","generic")){
Path <- Main_Path
}
if(path_type%in% c("F","f","Figures","Figure","figure","figures")){
Path <- "./Figures"
}
# Error messages for misspelled variables
Options = c("R","Results","D","Data","G","Generic","F","Figures")
if(!path_type %in% Options){
print("Data type value not accepted. Current acceptable options:")
print(Options)
stop()
}
# If the reading option is TRUE
if(read == TRUE){
My_Path <- paste(Path,extra_path,name,sep="/")
# Fix any double // in the path
My_Path <- gsub("//","/",My_Path)
if(stringr::str_detect(name,".xlsx") == TRUE){
My_Path <- readxl::read_excel(My_Path)
}else{
My_Path <- data.table::fread(My_Path, header=header)
}
}else{
My_Path <- paste(Path,extra_path,"",sep="/")
# Fix any double // in the path
My_Path<- gsub("//","/",My_Path)
}
# Function returns the selected path
return(My_Path)
}
basename(getwd())
devtools::document()
Sys.info()[7]
devtools::document()
devtools::install_github("jepa/MyFunctions")
devtools::document()
devtools::document(force = TRUE)
devtools::document()
devtools::document()
devtools::install_github("jepa/MyFunctions", force = T)
